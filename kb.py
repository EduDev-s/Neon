from telebot import types

# Start
markup_start = types.InlineKeyboardMarkup(row_width=1)
DZ = types.InlineKeyboardButton(text='–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ üìö', callback_data='dz')
schedule = types.InlineKeyboardButton(text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìë', callback_data='schedule')
call_schedule = types.InlineKeyboardButton(text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ üïù', callback_data='call_schedule')
profile = types.InlineKeyboardButton(text='–ü—Ä–æ—Ñ–∏–ª—å üë§', callback_data='profile')
markup_start.add(DZ, schedule, call_schedule, profile)

# Warn off notifications
markup_off_notifications_warn = types.InlineKeyboardMarkup(row_width=1)
off_notifications_warn = types.InlineKeyboardButton(text='–î–∞, —è —Ö–æ—á—É –æ—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', callback_data='off_notifications')
no_off_notifications_warn = types.InlineKeyboardButton(text='–ù–µ—Ç, —è —Ö–æ—á—É –æ—Å—Ç–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', callback_data='profile')
markup_off_notifications_warn.add(off_notifications_warn, no_off_notifications_warn)

# Warn del schedule
markup_del_schedule_warn = types.InlineKeyboardMarkup()
yes = types.InlineKeyboardButton(text='‚úÖ –î–∞ ‚úÖ', callback_data='schedule_del')
no = types.InlineKeyboardButton(text='‚ùå –ù–µ—Ç ‚ùå', callback_data='schedule_del_no')
markup_del_schedule_warn.add(yes, no)

num_lessons: int = 19
dict_name_lessons = {
    0: ['algebra', '–ê–ª–≥–µ–±—Ä–∞'],
    1: ['english_lang_1', '–ê–Ω–≥–ª. –Ø–∑. (1 –≥—Ä—É–ø–ø–∞)'],
    2: ['english_lang_2', '–ê–Ω–≥–ª. –Ø–∑. (2 –≥—Ä—É–ø–ø–∞)'],
    3: ['biology', '–ë–∏–æ–ª–æ–≥–∏—è'],
    4: ['geography', '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è'],
    5: ['geometry', '–ì–µ–æ–º–µ—Ç—Ä–∏—è'],
    6: ['computer_science_1', '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (1 –≥—Ä—É–ø–ø–∞)'],
    7: ['computer_science_2', '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (2 –≥—Ä—É–ø–ø–∞)'],
    8: ['story', '–ò—Å—Ç–æ—Ä–∏—è'],
    9: ['literature', '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞'],
    10: ['music', '–ú—É–∑—ã–∫–∞'],
    11: ['OBZH', '–û–ë–ñ'],
    12: ['social_science', '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ'],
    13: ['native_literature', '–†–æ–¥–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞'],
    14: ['russian_lang', '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫'],
    15: ['TBIS', '–¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'],
    16: ['technology', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è'],
    17: ['physics', '–§–∏–∑–∏–∫–∞'],
    18: ['chemistry', '–•–∏–º–∏—è']
}


def gen_dz_markup(pstr_t: str, pstr_cbd: str) -> types.InlineKeyboardMarkup:
    r_markup = types.InlineKeyboardMarkup(row_width=3)

    i: int = 0
    while i < num_lessons:
        try:
            a = types.InlineKeyboardButton(text=dict_name_lessons[i][1]+pstr_t, callback_data=dict_name_lessons[i][0]+pstr_cbd)
        except KeyError:
            return r_markup

        try:
            b = types.InlineKeyboardButton(text=dict_name_lessons[i+1][1]+pstr_t, callback_data=dict_name_lessons[i+1][0]+pstr_cbd)
        except KeyError:
            return r_markup.add(a)

        try:
            c = types.InlineKeyboardButton(text=dict_name_lessons[i+2][1]+pstr_t, callback_data=dict_name_lessons[i+2][0]+pstr_cbd)
        except KeyError:
            return r_markup.add(a, b)

        r_markup.add(a, b, c)
        i += 3

    return r_markup


def check(input: str, pstr_cbd: str) -> bool:
    i: int = 0
    while i < num_lessons:
        if input == str(dict_name_lessons[i][0]+pstr_cbd):  # type: ignore[operator, unused-ignore]
            return True
        else:
            i += 1
    return False


def gen_notifications_markup(rsn: bool | None) -> types.InlineKeyboardMarkup:
    if rsn == None:
        return types.InlineKeyboardMarkup().add(types.InlineKeyboardButton(text='DB_ERROR', callback_data='pass'))

    markup_notifications = types.InlineKeyboardMarkup()

    if rsn:
        off_notifications = types.InlineKeyboardButton(text='–í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', callback_data='off_notifications_warn')
        markup_notifications.add(off_notifications)
    else:
        on_notifications = types.InlineKeyboardButton(text='–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', callback_data='on_notifications')
        markup_notifications.add(on_notifications)

    return markup_notifications.add(back_in_main_menu)


del_schedule_button = types.InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å ‚ùå', callback_data='schedule_del_warn')
paragraph = types.InlineKeyboardButton(text='¬ß', callback_data='paragraph')
back = types.InlineKeyboardButton(text='‚¨ÖÔ∏è  –ù–∞–∑–∞–¥', callback_data='back_dz')
back_in_main_menu = types.InlineKeyboardButton(text='‚è™ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='back_in_main_menu')

# DZ
markup_dz = gen_dz_markup(pstr_t='', pstr_cbd='').add(back_in_main_menu)

# DZ replace
markup_dz_update = gen_dz_markup(pstr_t=' (r)', pstr_cbd='_update').add(paragraph)

# DZ and photo update
markup_dz_update_p = gen_dz_markup(pstr_t=' (rp)', pstr_cbd='_update_p').add(paragraph)

# URL
markup_url = gen_dz_markup(pstr_t=' (u)', pstr_cbd='_url').add(paragraph)

# -=-=-=-=-=-=-=-=-=- Admin Panel -=-=-=-=-=-=-=-=-=- #

markup_update_dz_or_gdz = types.InlineKeyboardMarkup(row_width=2)
dz = types.InlineKeyboardButton(text='–î/–ó', callback_data='update_dz')
gdz = types.InlineKeyboardButton(text='–ì–î–ó', callback_data='update_gdz')
markup_update_dz_or_gdz.add(dz, gdz)

markup_photo = types.InlineKeyboardMarkup(row_width=2)
dz = types.InlineKeyboardButton(text='–î/–ó', callback_data='photo_paste_dz')
schedule = types.InlineKeyboardButton(text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', callback_data='photo_paste_schedule')
markup_photo.add(schedule, dz)

# -=-=-=-=-=-=-=-=-=- End Admin Panel -=-=-=-=-=-=-=-=-=- #

# -=-=-=-=-=-=-=-=-=- Main Admin Panel -=-=-=-=-=-=-=-=-=- #

markup_admin_panel = types.InlineKeyboardMarkup(row_width=1)
mailing = types.InlineKeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞‚úâÔ∏è', callback_data='newsletter')
info = types.InlineKeyboardButton('–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ üõ†Ô∏è', callback_data='status_server')
markup_admin_panel.add(mailing, info, back_in_main_menu)

markup_chack_mailing = types.InlineKeyboardMarkup(row_width=2)
yes = types.InlineKeyboardButton(text='‚úÖ YES ‚úÖ', callback_data='chack_mailing_yes')
no = types.InlineKeyboardButton(text='‚ùå NO ‚ùå', callback_data='chack_mailing_no')
markup_chack_mailing.add(yes, no, back_in_main_menu)

# -=-=-=-=-=-=-=-=-=- End Main Admin Panel -=-=-=-=-=-=-=-=-=- #
