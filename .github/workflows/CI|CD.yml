name: CI|CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - develop

jobs:
    Lint:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [ 3.12, 3.10.12 ]
        steps:
            - name: Download repo
              uses: actions/checkout@v2
              with:
                python-version: ${{ matrix.python-version }}

            - name: Setup Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                python-version: ${{ matrix.python-version }}

            - name: Upgrade pip
              run: |
                  python3 -m pip install --upgrade pip

            - name: Install dependencies
              run: |
                  pip3 install types-psutil flake8
                  pip3 install -r requirements.txt

            - name: Flake8
              run: |
                  flake8 --extend-ignore E501,F405

    Tests:
        needs: Lint
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [ 3.12, 3.10.12 ]
        steps:
            - name: Download repo
              uses: actions/checkout@v2
              with:
                python-version: ${{ matrix.python-version }}

            - name: Setup Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                python-version: ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                pip3 install -r requirements.txt
                pip3 install mypy types-psutil

            - name: MyPy
              run: |
                  mypy .

    Deploy:
      #needs: Tests
      runs-on: ubuntu-latest
      steps:
        - name: Connect and pull
          if: github.event_name == 'push' && github.ref == 'refs/heads/master'
          run: |
            mkdir ~/.ssh
            touch ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" >> ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
            ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && git checkout ${{ secrets.MAIN_BRANCH }} && git pull && exit 0"

        - name: Cleanup
          run: rm -rf ~/.ssh && exit 0